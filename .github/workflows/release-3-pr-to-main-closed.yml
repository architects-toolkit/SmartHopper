name: üèÅ 3 Create Release on Release PR Close

# Description: This workflow automatically creates a GitHub Release when a release PR is closed.
# It extracts the milestone title as the version number and compiles release notes from
# all issues and pull requests associated with the milestone.
#
# Triggers:
# - Automatically when a milestone is closed
#
# Permissions:
# - contents:write - Required to create GitHub releases
# - issues:read - Required to read issue information for release notes
# - pull-requests:read - Required to read PR information for release notes

on:
  pull_request:
    types: [ closed ]
    branches:
      - main
  workflow_call:

jobs:
  create-release:
    if: ${{ github.event.pull_request.merged == true || github.event_name == 'workflow_call' }}
    runs-on: ubuntu-latest
    permissions:
      contents: write
      issues: read
      pull-requests: read

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: main # Checkout the main branch

      - name: Get Release Info
        id: release_info
        run: |
          VERSION=$(grep -oPm1 "(?<=<Version>)[^<]+" Solution.props)
          echo "RELEASE_VERSION=$VERSION" >> $GITHUB_ENV
          echo "RELEASE_DESCRIPTION<<EOF" >> $GITHUB_ENV
          echo "${{ github.event.pull_request.body }}" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Generate Release Notes
        id: issues
        uses: actions/github-script@v7
        with:
          script: |
            // Generate release notes for the new release version
            const releaseNotes = await github.rest.repos.generateReleaseNotes({
              owner: context.repo.owner,
              repo: context.repo.repo,
              tag_name: process.env.RELEASE_VERSION,
              target_commitish: 'main'
            });

            await core.setOutput('changelog', releaseNotes.data.body);

      - name: Check Prerelease Status
        id: prerelease
        run: |
          title="${{ env.RELEASE_VERSION }}"
          if [[ "${title}" == *-* ]] || [[ "${title}" == *+* ]]; then
            echo "IS_PRERELEASE=true" >> $GITHUB_ENV
          else
            echo "IS_PRERELEASE=false" >> $GITHUB_ENV
          fi

      - name: Create Release
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.RELEASE_VERSION }}
          name: "SmartHopper ${{ env.RELEASE_VERSION }}: <add an engaging title here>"
          body: |
            ${{ env.RELEASE_DESCRIPTION }}
            
            ${{ steps.issues.outputs.changelog }}
          draft: true
          prerelease: ${{ env.IS_PRERELEASE }}
          target_commitish: main
