name: 🏁 Create Release on Milestone Close

# Description: This workflow automatically creates a GitHub Release when a milestone is closed.
# It extracts the milestone title as the version number and compiles release notes from
# all issues and pull requests associated with the milestone.
#
# Triggers:
# - Automatically when a milestone is closed
#
# Permissions:
# - contents:write - Required to create GitHub releases
# - issues:read - Required to read issue information for release notes
# - pull-requests:read - Required to read PR information for release notes

on:
  milestone:
    types: [closed]

jobs:
  create-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      issues: read
      pull-requests: read

    steps:
      - uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b # v4
        with:
          fetch-depth: 0
          ref: main # Checkout the main branch

      - name: Get Milestone Info
        id: milestone
        run: |
          echo "MILESTONE_TITLE=${{ github.event.milestone.title }}" >> $GITHUB_ENV
          echo "MILESTONE_DESCRIPTION<<EOF" >> $GITHUB_ENV
          echo "${{ github.event.milestone.description }}" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Get Closed Issues
        id: issues
        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7
        with:
          script: |
            const milestone_number = context.payload.milestone.number;
            const issues = await github.rest.issues.listForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
              milestone: milestone_number,
              state: 'closed'
            });
            
            // Generate release notes
            const releaseNotes = await github.rest.repos.generateReleaseNotes({
              owner: context.repo.owner,
              repo: context.repo.repo,
              tag_name: process.env.MILESTONE_TITLE,
              target_commitish: 'main'
            });

            await core.setOutput('changelog', releaseNotes.data.body);

      - name: Update Solution.props with milestone version
        uses: ./.github/actions/versioning/update-version
        with:
          new-version: ${{ github.event.milestone.title }}

      - name: Check Prerelease Status
        id: prerelease
        run: |
          title="${{ github.event.milestone.title }}"
          if [[ "$title" == *-* ]] || [[ "$title" == *+* ]]; then
            echo "IS_PRERELEASE=true" >> $GITHUB_ENV
          else
            echo "IS_PRERELEASE=false" >> $GITHUB_ENV
          fi

      - name: Create Release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.event.milestone.title }}
          name: Release ${{ github.event.milestone.title }}
          body: |
            ${{ env.MILESTONE_DESCRIPTION }}
            
            ${{ steps.issues.outputs.changelog }}
          draft: true
          prerelease: ${{ env.IS_PRERELEASE }}
          target_commitish: main
