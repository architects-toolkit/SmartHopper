name: üë§üîÑ Update Branch

# Description: This workflow updates a target branch with changes from an origin branch.
# If the merge has no conflicts, it will automatically merge the changes.
# If there are conflicts, it will create a pull request for manual resolution.
#
# This workflow is manually triggered and requires specifying the origin and target branches.
#
# Triggers:
# - Manually via workflow_dispatch with origin and target branch inputs
#
# Permissions:
# - contents:write - Required to create branches and commit changes
# - pull-requests:write - Required to create pull requests

on:
  workflow_dispatch:
    inputs:
      origin_branch:
        description: 'Origin branch (source of changes)'
        required: true
        type: string
      target_branch:
        description: 'Target branch(es) as JSON array string, e.g. ["dev","prod"]'
        required: true
        type: string
      filter:
        description: 'Specific folder to update (e.g., .github or src/SmartHopper.Components). Leave blank to update all code.'
        required: false
        type: string

permissions:
  contents: write
  pull-requests: write

jobs:
  update-branch:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target_branch: ${{ fromJson(github.event.inputs.target_branch) }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
        with:
          fetch-depth: 0
          ref: ${{ matrix.target_branch }}

      - name: Validate branches
        id: validate-branches
        run: |
          # Check if origin branch exists
          if ! git ls-remote --heads origin ${{ github.event.inputs.origin_branch }} | grep -q ${{ github.event.inputs.origin_branch }}; then
            echo "::error::Origin branch '${{ github.event.inputs.origin_branch }}' does not exist."
            exit 1
          fi
          
          # Check if target branch exists
          if ! git ls-remote --heads origin ${{ matrix.target_branch }} | grep -q ${{ matrix.target_branch }}; then
            echo "::error::Target branch '${{ matrix.target_branch }}' does not exist."
            exit 1
          fi
          
          # Check if branches are the same
          if [[ "${{ github.event.inputs.origin_branch }}" == "${{ matrix.target_branch }}" ]]; then
            echo "::error::Origin and target branches cannot be the same."
            exit 1
          fi
          
          echo "Branches validated successfully."
        shell: bash

      - name: Fetch origin branch
        run: git fetch origin ${{ github.event.inputs.origin_branch }}

      - name: Prepare update
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          if [ -n "${{ github.event.inputs.filter }}" ]; then
            git checkout origin/${{ github.event.inputs.origin_branch }} -- "${{ github.event.inputs.filter }}"
            git add "${{ github.event.inputs.filter }}"
          else
            git merge origin/${{ github.event.inputs.origin_branch }} --no-ff --no-commit
          fi

      - name: Prepare PR variables
        run: |
          if [ -n "${{ github.event.inputs.filter }}" ]; then
            PR_SUFFIX=" for path ${{ github.event.inputs.filter }}"
          else
            PR_SUFFIX=""
          fi
          PR_TITLE="Update ${{ matrix.target_branch }} from ${{ github.event.inputs.origin_branch }}$PR_SUFFIX"
          echo "PR_TITLE=$PR_TITLE" >> $GITHUB_ENV
          echo "PR_SUFFIX=$PR_SUFFIX" >> $GITHUB_ENV

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          base: ${{ matrix.target_branch }}
          branch: update-branch/${{ matrix.target_branch }}-from-${{ github.event.inputs.origin_branch }}
          commit-message: "${{ env.PR_TITLE }}"
          title: "${{ env.PR_TITLE }}"
          body: |
            This PR updates `${{ matrix.target_branch }}` with changes from `${{ github.event.inputs.origin_branch }}`${{ env.PR_SUFFIX }}
          labels: update-branch
          add-paths: ${{ github.event.inputs.filter || '.' }}
          delete-branch: true

      - name: Output results
        run: |
          if git diff --quiet HEAD origin/${{ matrix.target_branch }}; then
            echo "‚ÑπÔ∏è No changes to merge. Branches are already in sync."
          else
            echo "‚úÖ Successfully updated ${{ matrix.target_branch }} with changes from ${{ github.event.inputs.origin_branch }}."
          fi
        shell: bash
