name: Update Version Badge

on:
  push:
    paths:
      - 'Solution.props'
    branches:
      - main
      - dev
  pull_request:
    types: [closed]
    branches:
      - main
      - dev
  workflow_dispatch:

permissions:
  contents: write

jobs:
  update-badge:
    runs-on: ubuntu-latest
    # Only run on PR merge, not on PR close without merge
    if: github.event.pull_request.merged == true || github.event_name != 'pull_request'
    
    steps:
    - uses: actions/checkout@8ade135a41bc03ea155e62e844d188df1ea18608 # v4
      with:
        fetch-depth: 0

    - name: Create and checkout new branch
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git checkout -b docs/update-version-badge
        
    - name: Extract version from Solution.props
      id: get-version
      run: |
        VERSION=$(grep -oP '(?<=<SolutionVersion>)[^<]+' Solution.props)
        # Format version for shields.io by encoding special characters
        # Use -- for dashes and %2E for dots
        SHIELDS_VERSION=$(echo $VERSION | sed 's/-/--/g' | sed 's/\./%2E/g')
        echo "Extracted VERSION=$VERSION"
        echo "Shields VERSION=$SHIELDS_VERSION"
        echo "VERSION=$VERSION" >> $GITHUB_ENV
        echo "SHIELDS_VERSION=$SHIELDS_VERSION" >> $GITHUB_ENV

    - name: Update README badges
      id: update-badges
      run: |
        # Determine status from version
        if [[ $VERSION == *"-dev."* ]]; then
          STATUS="Unstable%20development"
          STATUS_COLOR="yellow"
        elif [[ $VERSION == *"-alpha."* ]]; then
          STATUS="Alpha"
          STATUS_COLOR="orange"
        elif [[ $VERSION == *"-beta."* ]]; then
          STATUS="Beta"
          STATUS_COLOR="blue"
        elif [[ $VERSION == *"-rc."* ]]; then
          STATUS="Release%20candidate"
          STATUS_COLOR="green"
        else
          STATUS="Ready%20for%20production"
          STATUS_COLOR="brightgreen"
        fi
        
        echo "Status determined as: $STATUS"
        echo "Color determined as: $STATUS_COLOR"
        
        # Store current badges content
        CURRENT_VERSION_BADGE=$(grep "!\[Version\]" README.md || true)
        CURRENT_STATUS_BADGE=$(grep "!\[Status\]" README.md || true)
        
        # Update version badge with properly encoded version
        NEW_VERSION_BADGE="![Version](https://img.shields.io/badge/version-${SHIELDS_VERSION}-${STATUS_COLOR})"
        NEW_STATUS_BADGE="![Status](https://img.shields.io/badge/status-${STATUS}-${STATUS_COLOR})"
        
        # Update badges in README
        sed -i -E "s|!\[Version\]\(https://img\.shields\.io/badge/version-[^)]*\)|${NEW_VERSION_BADGE}|g" README.md
        sed -i -E "s|!\[Status\]\(https://img\.shields\.io/badge/status-[^)]*\)|${NEW_STATUS_BADGE}|g" README.md
        
        # Check if badges changed
        if [ "$CURRENT_VERSION_BADGE" != "$NEW_VERSION_BADGE" ] || [ "$CURRENT_STATUS_BADGE" != "$NEW_STATUS_BADGE" ]; then
          echo "BADGES_CHANGED=true" >> $GITHUB_ENV
          echo "Badges were updated"
        else
          echo "BADGES_CHANGED=false" >> $GITHUB_ENV
          echo "No changes to badges needed"
        fi

    - name: Commit and push changes
      if: env.BADGES_CHANGED == 'true'
      run: |
        git add README.md
        git commit -m "docs: Update version badge to ${{ env.VERSION }}"
        git push origin docs/update-version-badge

    - name: Create Pull Request
      if: env.BADGES_CHANGED == 'true'
      uses: peter-evans/create-pull-request@70a41aba780001da0a30141984ae2a0c95d8704e # v5
      with:
        branch: docs/update-version-badge
        base: main
        title: "docs: Update version badge to ${{ env.VERSION }}"
        body: |
          Automated PR to update version badge in README.md
          
          Changes:
          - Updated version badge to ${{ env.VERSION }}
          - Updated status and color based on version type
          - Properly encoded version for shields.io compatibility
          
          This PR was automatically created by the update-version-badge workflow.
        delete-branch: true
        labels: |
          documentation
          automated
