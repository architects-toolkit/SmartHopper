name: ðŸ§ª .NET CI

# Description: This workflow runs .NET tests on the SmartHopper solution to ensure that changes do not break functionality.
# 
# Triggers:
# - push to main branch
# - pull_request targeting main branch
# 
# Permissions:
# - contents: read - Required to read repository content
# - pull-requests: read - Required to read pull request information

on:
  push:
    branches-ignore:
      - 'dependabot/**'  # Ignore dependabot branches
  pull_request:
    branches: 
<<<<<<< HEAD
      - '**'  # Run on all branches for PRs
=======
      - main
      - dev
      - release/*
>>>>>>> 875c5fdd6ce8e4251b4449b14388411160103313

permissions:
  contents: read
  pull-requests: read

jobs:
  test:
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Check for existing .NET SDK
        id: check-dotnet
        shell: bash
        run: |
          if dotnet --version >/dev/null 2>&1; then
            echo "installed=true" >> $GITHUB_OUTPUT
          else
            echo "installed=false" >> $GITHUB_OUTPUT
          fi
          
      - name: Setup .NET
        if: ${{ steps.check-dotnet.outputs.installed == 'false' }}
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '7.0.x'

      - name: Prepare strong-name key
        shell: pwsh
        env:
          SIGNING_SNK_BASE64: ${{ secrets.SIGNING_SNK_BASE64 }}
        run: |
          if (-not (Test-Path signing.snk)) {
            if ($env:SIGNING_SNK_BASE64) {
              Write-Host "Decoding signing.snk from Base64 secret"
              ./Sign-StrongNames.ps1 -Base64 $env:SIGNING_SNK_BASE64
            } else {
              Write-Host "Generating temporary signing.snk"
              ./Sign-StrongNames.ps1 -Generate
            }
          } else {
            Write-Host "signing.snk already exists"
          }

      - name: Restore dependencies
        run: dotnet restore SmartHopper.sln

      - name: Build solution
        run: dotnet build --no-restore --configuration Release SmartHopper.sln

      - name: Run all tests
        run: dotnet test --no-build --configuration Release --results-directory TestResults
