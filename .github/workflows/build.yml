name: Build

on:
  workflow_dispatch:
  # push:
  #   branches: [ main ]
  # pull_request:
  #   branches: [ main ]

permissions:
  contents: read

jobs:
  build:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v4
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'
    
    - name: Configure NuGet Sources
      shell: pwsh
      run: |
        # Remove existing sources if they exist
        $sources = dotnet nuget list source
        if ($sources -match "nugetSource") {
            dotnet nuget remove source nugetSource
        }
        if ($sources -match "rhinoSource") {
            dotnet nuget remove source rhinoSource
        }
        
        # Add sources
        dotnet nuget add source "https://api.nuget.org/v3/index.json" -n nugetSource
        dotnet nuget add source "https://download.rhino3d.com/nuget/rhino/8.0" -n rhinoSource
        
        # Verify configuration
        dotnet nuget list source
        
    - name: Install ILMerge
      run: |
        nuget install ILMerge -Version 3.0.41 -Source nugetSource
        
    - name: Restore dependencies
      run: dotnet restore
      
    - name: Build
      run: dotnet build --no-restore --configuration Release

    - name: Merge Dependencies
      shell: pwsh
      run: |
        $outputDir = "merged"
        New-Item -ItemType Directory -Force -Path $outputDir
        
        # Find the main .gha file and its directory
        $mainAssembly = Get-ChildItem -Recurse -Filter "*.gha" | Select-Object -First 1
        $assemblyDir = $mainAssembly.Directory.FullName
        
        # Find ILMerge executable
        $ilmerge = Get-ChildItem -Recurse -Filter "ilmerge.exe" | Select-Object -First 1
        
        # Get all dependency DLLs except Rhino and Grasshopper
        $dependencies = Get-ChildItem -Path $assemblyDir -Filter "*.dll" |
            Where-Object { $_.Name -notmatch "Rhino|Grasshopper" } |
            ForEach-Object { $_.FullName }
        
        # Create space-separated list of dependencies
        $dependencyList = $dependencies -join " "
        
        # Run ILMerge
        & $ilmerge.FullName /out:"$outputDir/$($mainAssembly.Name)" /targetplatform:"v4" "$($mainAssembly.FullName)" $dependencyList

    - name: Upload Build Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: plugin-package
        path: merged/
