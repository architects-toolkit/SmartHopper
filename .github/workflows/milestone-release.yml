name: Create Release on Milestone Close

on:
  milestone:
    types: [closed]

jobs:
  create-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      issues: read
      pull-requests: read

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: main # Checkout the main branch

      - name: Get Milestone Info
        id: milestone
        run: |
          echo "MILESTONE_TITLE=${{ github.event.milestone.title }}" >> $GITHUB_ENV
          echo "MILESTONE_DESCRIPTION<<EOF" >> $GITHUB_ENV
          echo "${{ github.event.milestone.description }}" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Get Closed Issues
        id: issues
        uses: actions/github-script@v7
        with:
          script: |
            const milestone_number = context.payload.milestone.number;
            const issues = await github.rest.issues.listForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
              milestone: milestone_number,
              state: 'closed'
            });
            
            // Generate release notes
            const releaseNotes = await github.rest.repos.generateReleaseNotes({
              owner: context.repo.owner,
              repo: context.repo.repo,
              tag_name: process.env.MILESTONE_TITLE,
              target_commitish: 'main'
            });

            await core.setOutput('changelog', releaseNotes.data.body);

      - name: Check Prerelease Status
        id: prerelease
        run: |
          title="${{ github.event.milestone.title }}"
          if [[ "$title" == *-* ]] || [[ "$title" == *+* ]]; then
            echo "IS_PRERELEASE=true" >> $GITHUB_ENV
          else
            echo "IS_PRERELEASE=false" >> $GITHUB_ENV
          fi

      - name: Create Release
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.MILESTONE_TITLE }}
          name: Release ${{ env.MILESTONE_TITLE }}
          body: |
            ${{ env.MILESTONE_DESCRIPTION }}
            
            ${{ steps.issues.outputs.changelog }}
          draft: true
          prerelease: ${{ env.IS_PRERELEASE }}
          target_commitish: main
