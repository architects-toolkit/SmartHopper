name: "Trailing Whitespace"
description: "Check or fix trailing whitespace and normalize line endings"
inputs:
  mode:
    description: "Operation mode: fix, check, or soft-check"
    required: false
    default: "check"
runs:
  using: "composite"
  steps:
    - name: Process trailing whitespace
      shell: bash
      run: |
        # Set the shell to continue on error
        set +e

        # Get the list of changed files
        FILES=$(git diff --name-only ${{ github.event.pull_request.base.sha }} ${{ github.event.pull_request.head.sha }})

        # Initialize error code
        ERR=0

        # Process each file
        for file in $FILES; do
          if [[ -f "$file" ]]; then
            if [[ "${{ inputs.mode }}" == "fix" ]]; then
              sed -i 's/[ \t]*$//' "$file"
              # normalize to unix line endings
              sed -i 's/\r$//' "$file"
            else
              # Check trailing whitespace and CRLF with line numbers
              mapfile -t _TW < <(grep -En '[ \t]+$' "$file")
              mapfile -t _CR < <(grep -En '\r$' "$file")
              if (( ${#_TW[@]} || ${#_CR[@]} )); then
                for l in "${_TW[@]}"; do
                  lineno=${l%%:*}
                  if [ "${{ inputs.mode }}" = "soft-check" ]; then
                    echo "::warning file=$file,line=$lineno::Trailing whitespace found in $file on line $lineno (run with mode=fix to auto-fix)"
                  else
                    echo "Trailing whitespace found in $file:$lineno"
                    ERR=1
                  fi
                done
                for l in "${_CR[@]}"; do
                  lineno=${l%%:*}
                  if [ "${{ inputs.mode }}" = "soft-check" ]; then
                    echo "::warning file=$file,line=$lineno::CRLF found in $file on line $lineno (run with mode=fix to auto-fix)"
                  else
                    echo "CRLF found in $file:$lineno"
                    ERR=1
                  fi
                done
              fi
            fi
          fi
        done
        exit $ERR
