# Project-Specific Rules

1. Target platforms & frameworks:
   - Rhino 8 (Grasshopper 1)
   - Windows: .NET 7-windows
   - macOS: .NET 7
2. Solution structure:
   - SmartHopper.Core: Contains the core functionality
   - SmartHopper.Core.Grasshopper: Type converters, utilities & tool definitions
   - SmartHopper.Components: Grasshopper components (inherit ComponentBase/AIStatefulAsyncComponentBase)
   - SmartHopper.Config: Configuration models & ProviderManager
   - SmartHopper.Menu: Menu bar setup
   - SmartHopper.Components.Test: xUnit tests (not for production)
   - SmartHopper.Providers.*: AI provider projects
3. Component conventions:
   - Inherit from ComponentBase or derived class (for example AIStatefulAsyncComponentBase for AI components)
   - File name: `[Category][Action][Type]Component.cs`
   - Override `RegisterInputParams()`, `RegisterOutputParams()`
   - Provide unique `Guid`, `ComponentName`, `Nickname`, `Description`
4. AI Tool conventions:
   - Implement `IAIToolProvider` in `SmartHopper.Core.Grasshopper.Tools`
   - File name: `*Tools.cs`
   - Define AITool metadata (Name, Description, schema)
   - Autoâ€‘discover via `AIToolManager`
5. AI Provider conventions:
   - Use `SmartHopper.Providers.Template` as a starting point
   - Implement `IAIProviderFactory` & `IAIProviderSettings`
   - Document settings in JSON schema or Rhino config
6. Documentation & changelog:
   - Log API changes in `CHANGELOG.md` under **Unreleased**, in one of the following sections: Added, Changed, Deprecated, Removed, Fixed, Security
   - Use PR template per `.github/PULL_REQUEST_TEMPLATE.md`
   - Add docstrings to all public members
7. General guidelines:
   - Use native Grasshopper types & methods when possible
   - Use https://developer.rhino3d.com/ as the official documentation
   - Use English language only
   - Only change code lines directly needed to implement the request; avoid unrelated refactors
